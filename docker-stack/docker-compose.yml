version: "3.9"

networks:
  appnet:

volumes:
  mysql_data:
  mongo_data:
  rabbitmq_data:
  node_modules_vue:

services:

  # -----------------------
  # Laravel Backend (PHP-FPM)
  # -----------------------
  laravel:
    build:
      context: ../auth-system
      dockerfile: Dockerfile
    container_name: laravel-backend
    volumes:
      - ../auth-system/app:/var/www/app:cached
      - ../auth-system/routes:/var/www/routes:cached
      - ../auth-system/config:/var/www/config:cached
      - ../auth-system/graphql:/var/www/graphql:cached
      - ../auth-system/database:/var/www/database:cached
      - /var/www/vendor 
      - /var/www/storage 
    expose:
      - "9000"
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - ../auth-system/.env
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "php -v || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5

  # -----------------------
  # Laravel Worker (Queue)
  # -----------------------
  laravel-worker:
    build:
      context: ../auth-system
      dockerfile: Dockerfile
    container_name: laravel-worker
    command: php artisan queue:work --queue=domain-events,default --sleep=1 --tries=5
    restart: always
    depends_on:
      laravel:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
    volumes:
      - ../auth-system/app:/var/www/app:cached
      - /var/www/vendor
      - /var/www/storage
    env_file:
      - ../auth-system/.env
    networks:
      - appnet

  # -----------------------
  # Nginx (Reverse Proxy for Laravel)
  # -----------------------
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT:-8000}:80"
    volumes:
      - ../auth-system:/var/www:cached
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      laravel:
        condition: service_healthy
    networks:
      - appnet

  # -----------------------
  # Vue Frontend (Vite Dev)
  # -----------------------
  vue:
    build:
      context: ../vue-auth-system
      dockerfile: Dockerfile
    container_name: vue-frontend
    volumes:
      - ../vue-auth-system/src:/app/src:cached
      - ../vue-auth-system/tests:/app/tests:cached
      - node_modules_vue:/app/node_modules       # keep node_modules inside container
    ports:
      - "${VITE_PORT:-5173}:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_GRAPHQL_URL=${VITE_GRAPHQL_URL:-http://nginx:80/graphql}
    command: npm run dev -- --host 0.0.0.0
    networks:
      - appnet

  # -----------------------
  # MySQL
  # -----------------------
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql", "-u${DB_USERNAME:-root}", "-p${DB_PASSWORD:-root}"]
      interval: 10s
      timeout: 5s
      retries: 10

  # -----------------------
  # MongoDB
  # -----------------------
  mongo:
    image: mongo:6
    container_name: mongo-db
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 10

  # -----------------------
  # RabbitMQ
  # -----------------------
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_UI_PORT:-15672}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10

  # -----------------------
  # phpMyAdmin
  # -----------------------
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
    networks:
      - appnet