name: Deploy Portfolio (Docker)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Test SSH connection first (optional but useful)
      - name: 🔍 Test SSH connection
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "✅ SSH connection successful to $(hostname)"

      # 3️⃣ Deploy to server
      - name: 🚀 Deploy Application
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -euxo pipefail

            PROJECT_DIR=/var/www/html/portfolio-cqrs
            cd "$PROJECT_DIR" || exit 1

            if [ -d .git ]; then
              echo "Pulling latest code..."
              git fetch origin main
              git reset --hard origin/main
            else
              echo "Cloning repository..."
              git clone -b main git@github.com:thaeshwesin29/portfolio-cqrs-clean-architecture.git .
            fi

            echo "${{ secrets.ENV_FILE }}" > auth-system/.env
            echo "${{ secrets.ENV_FRONTEND_FILE }}" > vue-auth-system/.env
            chmod 600 auth-system/.env vue-auth-system/.env

            docker network inspect proxy >/dev/null 2>&1 || docker network create proxy

            docker compose -p portfolio-cqrs -f docker-stack/docker-compose.yml down
            docker compose -p portfolio-cqrs -f docker-stack/docker-compose.yml up -d --build

            for service in mongo rabbitmq mysql; do
              echo "Waiting for $service to be healthy..."
              until [ "$(docker inspect -f '{{.State.Health.Status}}' portfolio-$service-1 2>/dev/null || echo unhealthy)" == "healthy" ]; do
                sleep 5
              done
            done

            docker compose -p portfolio-cqrs -f docker-stack/docker-compose.yml exec -T laravel php artisan migrate --force
            docker compose -p portfolio-cqrs -f docker-stack/docker-compose.yml exec -T laravel php artisan optimize

            cd /var/www/html/reverse-proxy
            docker compose exec reverse-proxy nginx -s reload
